<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"      
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"      
	xmlns:context="http://www.springframework.org/schema/context"      
	xmlns:aop="http://www.springframework.org/schema/aop"      
	xmlns:tx="http://www.springframework.org/schema/tx"     
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd          
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd          
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd          
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">  
    
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
	    <property name="jobClass" value="novle.quartz.ExtendsJob" /> 
	    <property name="durability" value="true"></property>  
	</bean>  
	
	<!-- 配置任务高度的的时间/周期 -->  
	<bean id="jobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	    <property name="jobDetail" ref="jobDetail"></property>  
	    <!-- <property name="cronExpression" value="0 02 15 * * ?"></property>   -->
		<property name="cronExpression" value="0 */1 * * * ?"></property>
	</bean>  
	
	 <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="dataSource" ref="dataSource"></property> 
        <property name="configLocation" value="classpath:conf/quartz.properties" />    
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey" />    
       <!--  设置自动启动     -->
        <property name="autoStartup" value="false" /> 
        <!-- 必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->    
        <property name="startupDelay" value="1" />
        
       <!--  可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->      
        <property name="overwriteExistingJobs" value="true" /> 
           
        <property name="triggers">  
           <list>  
               <ref bean="jobTrigger"/>  
            </list>  
        </property>  
    </bean>

</beans>